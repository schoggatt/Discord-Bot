ngram = require('nltk').ngram;
tri = new ngram(2);

var str = 'ABCDEFG';
process.assert(tri.enum(str).length === str.length - 2 + 1);
process.assert(tri.enum(str)[0].length === 2);

var s = 'すもももももももものうち',
    t = 'とりのももにくももものにく',
    u = 'まじもじるるも';

// have common (3-long) substring ?
process.assert(tri.sim(s, t) > 0);
process.assert(tri.sim(t, u) === 0);

// reflexive
process.assert(tri.sim(s, s) === 1);
process.assert(tri.sim(t, t) === 1);
process.assert(tri.sim(u, u) === 1);

// symmetric
process.assert(tri.sim(s, t) === tri.sim(t, s));

